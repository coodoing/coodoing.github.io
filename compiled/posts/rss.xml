<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>Rye of coodoing</title>
    <description>Rye of coodoing</description>
    <link/>
    <pubDate>2014-08-03</pubDate>
    <item>
      <title>Hybridauth&#x4E3B;&#x8981;&#x7C7B;&#x5206;&#x6790;</title>
      <link>/opensource/hybridauth%E4%B8%BB%E8%A6%81%E7%B1%BB%E5%88%86%E6%9E%90</link>
      <pubDate>2014-07-12</pubDate>
      <description>&lt;p&gt;&#x4E3B;&#x8981;&#x7684;&#x7C7B;&#x6587;&#x4EF6;&#x53CA;&#x51FD;&#x6570;&#x8BF4;&#x660E;&#xFF1A;&lt;/p&gt;

&lt;h2 id="toc_0"&gt;HAuth.php&lt;/h2&gt;

&lt;h3 id="toc_1"&gt;&#x4F5C;&#x7528;&lt;/h3&gt;

&lt;p&gt;hybridauth&#x5E93;&#x5165;&#x53E3;&lt;/p&gt;

&lt;h3 id="toc_2"&gt;&#x51FD;&#x6570;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;authenticate()=&amp;gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;setup(),login()
getAdapter()&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;setup()=&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&#x6DFB;&#x52A0;&#x53C2;&#x6570;&#xFF1A;hauth&lt;em&gt;return&lt;/em&gt;to&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;login()=&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&#x5220;&#x9664;&#x65E7;session&#xFF1A;hauth&lt;em&gt;return&lt;/em&gt;to, hauth&lt;em&gt;endpoint, id&lt;/em&gt;provider_params&lt;/p&gt;

&lt;p&gt;&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#xFF1A;hauth&lt;em&gt;token, hauth&lt;/em&gt;time, login&lt;em&gt;start, login&lt;/em&gt;done&lt;/p&gt;

&lt;p&gt;&#x6DFB;&#x52A0;session&#xFF1A;hauth&lt;em&gt;return&lt;/em&gt;to, hauth&lt;em&gt;endpoint, id&lt;/em&gt;provider_params&lt;/p&gt;

&lt;p&gt;redirect&#xFF1A;&#x8DF3;&#x8F6C;&#x5230;login_start&#x9875;&#x9762;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;getAdapter()=&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id="toc_3"&gt;HAuth_Adapter.php&lt;/h2&gt;

&lt;h3 id="toc_4"&gt;&#x4F5C;&#x7528;&lt;/h3&gt;

&lt;p&gt;&#x8FDE;&#x63A5;&#x7528;&#x6237;&#x5230;&#x6307;&#x5B9A;&#x7684;provider&#xFF0C;&#x6BD4;&#x8F83;&#x5E38;&#x89C1;&#x7684;&#x6709;facebook&#xFF0C;twitter&lt;/p&gt;

&lt;h2 id="toc_5"&gt;Storage.php&lt;/h2&gt;

&lt;h3 id="toc_6"&gt;&#x4F5C;&#x7528;&lt;/h3&gt;

&lt;p&gt;session storage manager&lt;/p&gt;

&lt;h2 id="toc_7"&gt;Provider_Model.php&lt;/h2&gt;

&lt;h3 id="toc_8"&gt;&#x4F5C;&#x7528;&lt;/h3&gt;

&lt;p&gt;abstract&#x7C7B;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x7EDF;&#x4E00;&#x7684;provider&#x63A5;&#x53E3;&lt;/p&gt;

&lt;h3 id="toc_9"&gt;&#x51FD;&#x6570;&#xFF08;&#x4EE5;&lt;code&gt;Provider_Model_OAuth2.php&lt;/code&gt;&#x4E3A;&#x4F8B;&#xFF09;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;initialize()=&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;thirdparty/oAuth2Client(client&lt;em&gt;id, client&lt;/em&gt;secret, redirect&lt;em&gt;url)
token&#x6570;&#x636E;&#x5305;&#x62EC;&#xFF1A;access&lt;/em&gt;token, refresh&lt;em&gt;token, access&lt;/em&gt;token&lt;em&gt;expires&lt;/em&gt;in, access&lt;em&gt;tocket&lt;/em&gt;expires&lt;em&gt;in, sign&lt;/em&gt;tocket_name
&#x65B9;&#x6CD5;&#xFF1A;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;loginBegin()=&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;redirect&#x5E76;&#x8C03;&#x7528;authorizeUrl()&#x8FDB;&#x884C;&#x6388;&#x6743;&#x64CD;&#x4F5C;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;loginFinish()=&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;authenticate()&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;token&#x503C;&#xFF0C;&#x540C;&#x65F6;setUserConnection()&#x72B6;&#x6001;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;getUserProfile()=&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id="toc_10"&gt;Endpoint.php&lt;/h2&gt;

&lt;h3 id="toc_11"&gt;&#x4F5C;&#x7528;&lt;/h3&gt;

&lt;p&gt;provider&#x7684;&#x7EC8;&#x7AEF;&lt;/p&gt;

&lt;h3 id="toc_12"&gt;&#x51FD;&#x6570;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;process()=&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&#x5904;&#x7406;&#x5F53;&#x524D;request&#x8BF7;&#x6C42;&#xFF0C;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#xFF1A;processAuthStart()&#x548C;processAuthDone()&#x65B9;&#x6CD5;&#xFF0C;&#x5206;&#x522B;&#x8C03;&#x7528;loginBegin()&#x548C;loginFinish()&lt;/p&gt;
</description>
    </item>
    <item>
      <title>piconv tool</title>
      <link>/programming/piconv-tool</link>
      <pubDate>2014-05-12</pubDate>
      <description>&lt;h2 id="toc_0"&gt;Description&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;piconv&lt;/code&gt; tool use &lt;code&gt;chardet&lt;/code&gt; to auto detect the file&amp;#39;s encoding format and convert it to the specified encoding format even you don&amp;#39;t know what the file&amp;#39;s encoding is. If you want to know more about &lt;code&gt;chardet&lt;/code&gt;, you can checkout the &lt;code&gt;uchardet&lt;/code&gt;.  &lt;/p&gt;

&lt;h2 id="toc_1"&gt;How to use the &lt;code&gt;piconv&lt;/code&gt; tool&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;piconv&lt;/code&gt; tool provides an easy way to convert the file&amp;#39;s encoding, you just need to input &lt;code&gt;&amp;#39;file_name&amp;#39;&lt;/code&gt; and &lt;code&gt;&amp;#39;to_encoding&amp;#39;&lt;/code&gt; params to realizing the convertion process.&lt;/p&gt;

&lt;p&gt;Run the &lt;strong&gt;&lt;em&gt;piconv.py&lt;/em&gt;&lt;/strong&gt; script as following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python piconv.py filename/dirname to_encoding
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="toc_2"&gt;Why piconv?&lt;/h2&gt;

&lt;p&gt;When you encounter some garbled characters problem, you must want to convert it to the correct encoding, linux provides &lt;code&gt;iconv&lt;/code&gt; command to convert file between different character encodings. The from-encoding and to-encoding params must be specified and even though it may still generate some garbled characters like &lt;strong&gt;&amp;#39;?? &#xFFFD;&#xFFFD;&#xFFFD;&#xFFFD;2?&#xFFFD;&#xFFFD;&#xFFFD;&#xFFFD;&amp;#39;&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you know the file&amp;#39;s correct encoding(includes from and to encodings), just ignore what I descibe  below&lt;/em&gt;&lt;/strong&gt;. But when you don&amp;#39;t get the file&amp;#39;s right encoding or you don&amp;#39;t even know the file&amp;#39;s encoding, you can&amp;#39;t convert the file correctly. &lt;/p&gt;

&lt;p&gt;I develop &lt;code&gt;piconv&lt;/code&gt; tool to solve the encoding problem and simplify this convertion process of many files in the input directory. When you use the &lt;code&gt;piconv&lt;/code&gt; tool, you just need to input the &amp;#39;file/dir&amp;#39; and &amp;#39;to-encoding&amp;#39; param to realize the right convertion. For more usage detail, just checkout the &lt;strong&gt;How to use &lt;code&gt;piconv&lt;/code&gt; section&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;At first, I will show you some test cases about some garbled characters problem during using &lt;code&gt;iconv&lt;/code&gt; command. Then I will compare the usage beetween  &lt;code&gt;iconv&lt;/code&gt; and &lt;code&gt;piconv&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="toc_3"&gt;&lt;code&gt;iconv&lt;/code&gt; garbled characters problem&lt;/h3&gt;

&lt;p&gt;The encoding format of &lt;strong&gt;data-set/chinese-ansi.txt&lt;/strong&gt; is &lt;em&gt;GBK&lt;/em&gt;, but you will get &lt;em&gt;ISO-8859&lt;/em&gt; when use the &lt;code&gt;file&lt;/code&gt; command, then the format will be wrong. So if you don&amp;#39;t know the right encoding of the file and use the &lt;em&gt;ISO-8859-1&lt;/em&gt; encoding, the convertion will be wrong and cause some encoding problems.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;file data-set/chinese-ansi.txt #ISO-8859
iconv -f iso-8859-1 -t utf-8 data-set/chinese-ansi.txt &amp;gt; chinese-ansi.txt # garbled character-&#xFFFD;&#xFFFD;&#xFFFD;&#xFFFD;

Or

iconv -f GBK -t utf-8 data-set/chinese-ansi.txt &amp;gt; chinese-ansi.txt # correctly

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The input file &lt;strong&gt;data-set/assoc.c&lt;/strong&gt; contains chinese characters &lt;strong&gt;&amp;quot;&#x377;&#xFFFD;&#x5DE8;&amp;quot;&lt;/strong&gt; and is &lt;em&gt;utf-8&lt;/em&gt; encoding format. The source content is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    // &#x377;&#xFFFD;&#x5DE8;
    return 1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;convert utf-8 to gbk&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;iconv -f utf-8 -t gbk data-set/assoc.c &amp;gt; utf8-gbk.c
#piconv -f utf-8 -t gbk data-set/assoc.c &amp;gt; utf8-gbk-p.c
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;  // &#xFFFD;&#xFFFD;&#xFFFD;&#xFFFD;2?&#xFFFD;&#xFFFD;&#xFFFD;&#xFFFD;
     return 1;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;convert gbk to utf-8&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we take a look at the result when convert gbk to utf-8 through &lt;code&gt;iconv&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; iconv -f gbk -t utf-8 data-set/assoc.c &amp;gt; gbk-utf8.c
 #iconv: illegal input sequence at position 16
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(&lt;strong&gt;terminated by the unicode error&lt;/strong&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    // &#x5934;&#x63D2;&#xFFFD;&#xFFFD;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we use &lt;strong&gt;&lt;code&gt;iconv -c&lt;/code&gt;&lt;/strong&gt; option to omit invalid characters from output.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iconv -c -s -f gbk -t utf-8 data-set/assoc.c &amp;gt; gbk-utf8-c.c
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;    // &#x5934;&#x63D2;&#xFFFD;&#xFFFD;
    return 1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;utf8 to utf8 &amp;amp; gbk to gbk&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;iconv -c -s -f utf-8 -t utf-8 data-set/assoc.c &amp;gt; utf8-utf8.c

iconv -c -s -f gbk -t gbk data-set/assoc.c &amp;gt; gbk-gbk.c
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;     // &#x377;&#xFFFD;&#x5DE8;
    return 1;
}

    // ?&#xFFFD;&#xFFFD;&#xFFFD;&#xFFFD;?&amp;lt;8f&amp;gt;&amp;lt;92&amp;gt;?3
    return 1;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also test other convertion cases. &lt;/p&gt;

&lt;h3 id="toc_4"&gt;Usage comparision between &lt;code&gt;piconv&lt;/code&gt; and &lt;code&gt;iconv&lt;/code&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Use &lt;code&gt;iconv&lt;/code&gt; to convert input file and directory&lt;/strong&gt;
use the &lt;code&gt;exec&lt;/code&gt;  or &lt;code&gt;bash&lt;/code&gt; to iterator directories&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;iconv -c -s -f gbk -t utf-8 data-set/assoc.c &amp;gt; gbk-utf8-c.c

find iconv-test/ -name gbk-gbk.c -exec iconv -c -f gbk 
-t utf-8 &amp;quot;{}&amp;quot; -o &amp;quot;{}&amp;quot; \;
find iconv-test/ -name gbk-gbk.c -type f | (while read file; do  iconv -c -f gbk -t utf-8 &amp;quot;$file&amp;quot; &amp;gt;&amp;quot;${file%.txt}-utf8.txt&amp;quot;; done);
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How we do through &lt;code&gt;piconv&lt;/code&gt; tool&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;FIconv(&amp;#39;Filename&amp;#39;,to-encoding)
#FIconv(&amp;#39;french-mscs.txt&amp;#39;,&amp;#39;utf-8&amp;#39;)

DIconv(&amp;#39;Dirname&amp;#39;,to-encoding).codecs_iconv_iterator()
#diconv = DIconv(&amp;#39;/var/www/piconv/test&amp;#39;,&amp;#39;utf-8&amp;#39;)
#diconv.codecs_iconv_iterator()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="toc_5"&gt;Supports Encodings&lt;/h2&gt;

&lt;p&gt;As using &lt;code&gt;chardet&lt;/code&gt; to detect the file&amp;#39;s encoding, &lt;code&gt;piconv&lt;/code&gt; supports the follow encodings:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ASCII, UTF-8, UTF-16 (2 variants), UTF-32 (4 variants)&lt;/li&gt;
&lt;li&gt;Big5, GB2312, EUC-TW, HZ-GB-2312, ISO-2022-CN (Traditional and Simplified Chinese)&lt;/li&gt;
&lt;li&gt;EUC-JP, SHIFT_JIS, ISO-2022-JP (Japanese)&lt;/li&gt;
&lt;li&gt;EUC-KR, ISO-2022-KR (Korean)&lt;/li&gt;
&lt;li&gt;KOI8-R, MacCyrillic, IBM855, IBM866, ISO-8859-5, windows-1251 (Cyrillic)&lt;/li&gt;
&lt;li&gt;ISO-8859-2, windows-1250 (Hungarian)&lt;/li&gt;
&lt;li&gt;ISO-8859-5, windows-1251 (Bulgarian)&lt;/li&gt;
&lt;li&gt;windows-1252 (English)
*ISO-8859-7, windows-1253 (Greek)&lt;/li&gt;
&lt;li&gt;ISO-8859-8, windows-1255 (Visual and Logical Hebrew)&lt;/li&gt;
&lt;li&gt;TIS-620 (Thai)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id="toc_6"&gt;Functions &amp;amp; Advantages&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;piconv&lt;/code&gt; includes following functions and advantages:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;auto-detect files&amp;#39; encoding&lt;/li&gt;
&lt;li&gt;encoding exception handler&lt;/li&gt;
&lt;li&gt;simplify the convertion of &lt;code&gt;iconv&lt;/code&gt; and easy to use&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;todo&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;regex match convertion&lt;/li&gt;
&lt;li&gt;compress the dirname and improve the iteration speed&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id="toc_7"&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chardet/chardet"&gt;chardet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lxr.mozilla.org/seamonkey/source/extensions/universalchardet/"&gt;mozilla chardet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>python unicode</title>
      <link>/programming/python-unicode</link>
      <pubDate>2013-09-20</pubDate>
      <description>&lt;p&gt;(py-unicode)&#x57FA;&#x4E8E;python33&#xFF0C;&#x8FD0;&#x884C;&#x4E8E;win7&#x4E2D;&#x6587;&#x73AF;&#x5883;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x5173;&#x4E8E;python3.x&#x4E2D;unicode&#x4EE5;&#x53CA;encoding&#x65B9;&#x9762;&#x7684;&#x6DF1;&#x5165;&#x7406;&#x89E3;&#xFF0C;&#x4E3B;&#x8981;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x77E5;&#x8BC6;&#x70B9;&#x5305;&#x62EC;&#xFF1A;&lt;/p&gt;

&lt;h3 id="toc_0"&gt;1 ASCII&#x3001;UNICODE&#x3001;GBK&#x3001;CP936&#x3001;MSCS&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.1 ASCII&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&#x7F8E;&#x56FD;&#x4FE1;&#x606F;&#x4EA4;&#x6362;&#x6807;&#x51C6;&#x7801;&#x3002; &#x5728;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x5B58;&#x50A8;&#x5355;&#x5143;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;ASCII&#x7801;&#x503C;&#x5360;&#x4E00;&#x4E2A;&#x5B57;&#x8282;(8&#x4E2A;&#x4E8C;&#x8FDB;&#x5236;&#x4F4D;)&#xFF0C;&#x4F46;&#x5176;&#x6700;&#x9AD8;&#x4F4D;(b7)&#x7528;&#x4F5C;&#x5947;&#x5076;&#x6821;&#x9A8C;&#x4F4D;&#x3002;ASCII(American Standard Code for Information Interchange)&#xFF0C;&#x662F;&#x4E00;&#x79CD;&#x5355;&#x5B57;&#x8282;&#x7684;&#x7F16;&#x7801;&#x3002;&#x8BA1;&#x7B97;&#x673A;&#x4E16;&#x754C;&#x91CC;&#x4E00;&#x5F00;&#x59CB;&#x53EA;&#x6709;&#x82F1;&#x6587;&#xFF0C;&#x800C;&#x5355;&#x5B57;&#x8282;&#x53EF;&#x4EE5;&#x8868;&#x793A;256&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x6240;&#x6709;&#x7684;&#x82F1;&#x6587;&#x5B57;&#x7B26;&#x548C;&#x8BB8;&#x591A;&#x7684;&#x63A7;&#x5236;&#x7B26;&#x53F7;&#x3002;&#x4E0D;&#x8FC7;ASCII&#x53EA;&#x7528;&#x5230;&#x4E86;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x534A;&#xFF08;\x80&#x4EE5;&#x4E0B;&#xFF09;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;MBCS&#x5F97;&#x4EE5;&#x5B9E;&#x73B0;&#x7684;&#x57FA;&#x7840;&#x3002;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.2 ISO8859-1&#x3001;EASCII&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;EASCII&#x662F;ASCII&#x7684;&#x6269;&#x5145;&#xFF0C;&#x628A;&#x7B2C;&#x516B;&#x4F4D;&#x4E5F;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x4FE1;&#x606F;&#xFF1B;&#x5728;Windows&#x4E2D;&#x7528;Alt+&#x5C0F;&#x952E;&#x76D8;&#x6570;&#x5B57;&#x8F93;&#x5165;&#x7684;&#x5C31;&#x662F;EASCII&#x7801;&#x5BF9;&#x5E94;&#x5B57;&#x7B26;&#x3002;ISO8859-1&#x5C31;&#x662F;EASCII&#x6700;&#x5178;&#x578B;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x57FA;&#x672C;&#x80FD;&#x591F;&#x8986;&#x76D6;&#x897F;&#x6B27;&#x7684;&#x62C9;&#x4E01;&#x5B57;&#x6BCD;&#xFF0C;&#x6240;&#x4EE5;&#x53C8;&#x53EB;Latin-1&#x3002;&#x6709;&#x4E9B;&#x56FD;&#x5916;&#x7A0B;&#x5E8F;&#x5C31;&#x8981;&#x6C42;&#x4F7F;&#x7528;ISO8859-1&#x7F16;&#x7801;&#x4EE5;&#x4FDD;&#x8BC1;Binary Safe&#xFF0C;&#x6BD4;&#x5982;&#x8457;&#x540D;&#x7684;XMB&#x3002;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.3 Unicode&#x3001;UTF-8&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unicode&#x662F;&#x4E1A;&#x754C;&#x7684;&#x4E00;&#x79CD;&#x6807;&#x51C6;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x4F7F;&#x7535;&#x8111;&#x5F97;&#x4EE5;&#x5448;&#x73B0;&#x4E16;&#x754C;&#x4E0A;&#x6570;&#x5341;&#x79CD;&#x6587;&#x5B57;&#x7684;&#x7CFB;&#x7EDF;&#x3002;
&#x540E;&#x6765;&#xFF0C;&#x6709;&#x4EBA;&#x5F00;&#x59CB;&#x89C9;&#x5F97;&#x592A;&#x591A;&#x7F16;&#x7801;&#x5BFC;&#x81F4;&#x4E16;&#x754C;&#x53D8;&#x5F97;&#x8FC7;&#x4E8E;&#x590D;&#x6742;&#x4E86;&#xFF0C;&#x8BA9;&#x4EBA;&#x8111;&#x888B;&#x75BC;&#xFF0C;&#x4E8E;&#x662F;&#x5927;&#x5BB6;&#x5750;&#x5728;&#x4E00;&#x8D77;&#x62CD;&#x8111;&#x888B;&#x60F3;&#x51FA;&#x6765;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A;&#x6240;&#x6709;&#x8BED;&#x8A00;&#x7684;&#x5B57;&#x7B26;&#x90FD;&#x7528;&#x540C;&#x4E00;&#x79CD;&#x5B57;&#x7B26;&#x96C6;&#x6765;&#x8868;&#x793A;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;Unicode&#x3002;&lt;/p&gt;

&lt;p&gt;&#x6700;&#x521D;&#x7684;Unicode&#x6807;&#x51C6;UCS-2&#x4F7F;&#x7528;&#x4E24;&#x4E2A;&#x5B57;&#x8282;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x6240;&#x4EE5;&#x4F60;&#x5E38;&#x5E38;&#x53EF;&#x4EE5;&#x542C;&#x5230;Unicode&#x4F7F;&#x7528;&#x4E24;&#x4E2A;&#x5B57;&#x8282;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x8BF4;&#x6CD5;&#x3002;&#x4F46;&#x8FC7;&#x4E86;&#x4E0D;&#x4E45;&#x6709;&#x4EBA;&#x89C9;&#x5F97;256*256&#x592A;&#x5C11;&#x4E86;&#xFF0C;&#x8FD8;&#x662F;&#x4E0D;&#x591F;&#x7528;&#xFF0C;&#x4E8E;&#x662F;&#x51FA;&#x73B0;&#x4E86;UCS-4&#x6807;&#x51C6;&#xFF0C;&#x5B83;&#x4F7F;&#x7528;4&#x4E2A;&#x5B57;&#x8282;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x4E0D;&#x8FC7;&#x6211;&#x4EEC;&#x7528;&#x7684;&#x6700;&#x591A;&#x7684;&#x4ECD;&#x7136;&#x662F;UCS-2&#x3002;&lt;/p&gt;

&lt;p&gt;UCS(Unicode Character Set)&#x8FD8;&#x4EC5;&#x4EC5;&#x662F;&#x5B57;&#x7B26;&#x5BF9;&#x5E94;&#x7801;&#x4F4D;&#x7684;&#x4E00;&#x5F20;&#x8868;&#x800C;&#x5DF2;&#xFF0C;&#x6BD4;&#x5982;&amp;quot;&#x6C49;&amp;quot;&#x8FD9;&#x4E2A;&#x5B57;&#x7684;&#x7801;&#x4F4D;&#x662F;6C49&#x3002;&#x5B57;&#x7B26;&#x5177;&#x4F53;&#x5982;&#x4F55;&#x4F20;&#x8F93;&#x548C;&#x50A8;&#x5B58;&#x5219;&#x662F;&#x7531;UTF(UCS Transformation Format)&#x6765;&#x8D1F;&#x8D23;&#x3002;&lt;/p&gt;

&lt;p&gt;&#x4E00;&#x5F00;&#x59CB;&#x8FD9;&#x4E8B;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;UCS&#x7684;&#x7801;&#x4F4D;&#x6765;&#x4FDD;&#x5B58;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;UTF-16&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;&amp;quot;&#x6C49;&amp;quot;&#x76F4;&#x63A5;&#x4F7F;&#x7528;\x6C\x49&#x4FDD;&#x5B58;(UTF-16-BE)&#xFF0C;&#x6216;&#x662F;&#x5012;&#x8FC7;&#x6765;&#x4F7F;&#x7528;\x49\x6C&#x4FDD;&#x5B58;(UTF-16-LE)&#x3002;&#x4F46;&#x7528;&#x7740;&#x7528;&#x7740;&#x7F8E;&#x56FD;&#x4EBA;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x5403;&#x4E86;&#x5927;&#x4E8F;&#xFF0C;&#x4EE5;&#x524D;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x53EA;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x5C31;&#x80FD;&#x4FDD;&#x5B58;&#x4E86;&#xFF0C;&#x73B0;&#x5728;&#x5927;&#x9505;&#x996D;&#x4E00;&#x5403;&#x53D8;&#x6210;&#x4E86;&#x4E24;&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x7A7A;&#x95F4;&#x6D88;&#x8017;&#x5927;&#x4E86;&#x4E00;&#x500D;&#x2026;&#x2026;&#x4E8E;&#x662F;UTF-8&#x6A2A;&#x7A7A;&#x51FA;&#x4E16;&#x3002;&lt;/p&gt;

&lt;p&gt;UTF-8&#x662F;&#x4E00;&#x79CD;&#x5F88;&#x522B;&#x626D;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x5177;&#x4F53;&#x8868;&#x73B0;&#x5728;&#x4ED6;&#x662F;&#x53D8;&#x957F;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x517C;&#x5BB9;ASCII&#xFF0C;ASCII&#x5B57;&#x7B26;&#x4F7F;&#x7528;1&#x5B57;&#x8282;&#x8868;&#x793A;&#x3002;&#x7136;&#x800C;&#x8FD9;&#x91CC;&#x7701;&#x4E86;&#x7684;&#x5FC5;&#x5B9A;&#x662F;&#x4ECE;&#x522B;&#x7684;&#x5730;&#x65B9;&#x62A0;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x4F60;&#x80AF;&#x5B9A;&#x4E5F;&#x542C;&#x8BF4;&#x8FC7;UTF-8&#x91CC;&#x4E2D;&#x6587;&#x5B57;&#x7B26;&#x4F7F;&#x7528;3&#x4E2A;&#x5B57;&#x8282;&#x6765;&#x4FDD;&#x5B58;&#x5427;&#xFF1F;4&#x4E2A;&#x5B57;&#x8282;&#x4FDD;&#x5B58;&#x7684;&#x5B57;&#x7B26;&#x66F4;&#x662F;&#x5728;&#x6CEA;&#x5954;&#x2026;&#x2026;&#xFF08;&#x5177;&#x4F53;UCS-2&#x662F;&#x600E;&#x4E48;&#x53D8;&#x6210;UTF-8&#x7684;&#x8BF7;&#x81EA;&#x884C;&#x641C;&#x7D22;&#xFF09;
Unicode&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x4E0D;&#x540C;&#x4E8E;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#xFF0C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x7684;Unicode&#x7F16;&#x7801;&#x662F;&#x786E;&#x5B9A;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x5B9E;&#x9645;&#x4F20;&#x8F93;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x7531;&#x4E8E;&#x4E0D;&#x540C;&#x7CFB;&#x7EDF;&#x5E73;&#x53F0;&#x7684;&#x8BBE;&#x8BA1;&#x4E0D;&#x4E00;&#x5B9A;&#x4E00;&#x81F4;&#xFF0C;&#x4EE5;&#x53CA;&#x51FA;&#x4E8E;&#x8282;&#x7701;&#x7A7A;&#x95F4;&#x7684;&#x76EE;&#x7684;&#xFF0C;&#x5BF9;Unicode&#x7F16;&#x7801;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x6709;&#x6240;&#x4E0D;&#x540C;&#x3002;&#x4E8E;&#x662F;&#x5C31;&#x6709;&#x4E86;UTF-8&#x3001;UTF-16&#x3001;UTF-32&#x3002;&lt;/p&gt;

&lt;p&gt;UTF-8&#x4F7F;&#x7528;&#x4E00;&#x81F3;&#x56DB;&#x4E2A;&#x5B57;&#x8282;&#x4E3A;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x7F16;&#x7801;&#xFF1A;&lt;/p&gt;

&lt;p&gt;ASCII&#x5B57;&#x7B26;&#x53EA;&#x9700;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x7F16;&#x7801;&#xFF08;Unicode&#x8303;&#x56F4;&#x7531;U+0000&#x81F3;U+007F&#xFF09;&#x3002;&#x5E26;&#x6709;&#x9644;&#x52A0;&#x7B26;&#x53F7;&#x7684;&#x62C9;&#x4E01;&#x6587;&#x3001;&#x5E0C;&#x814A;&#x6587;&#x3001;&#x897F;&#x91CC;&#x5C14;&#x5B57;&#x6BCD;&#x3001;&#x4E9A;&#x7F8E;&#x5C3C;&#x4E9A;&#x8BED;&#x3001;&#x5E0C;&#x4F2F;&#x6765;&#x6587;&#x3001;&#x963F;&#x62C9;&#x4F2F;&#x6587;&#x3001;&#x53D9;&#x5229;&#x4E9A;&#x6587;&#x53CA;&#x5B83;&#x62FF;&#x5B57;&#x6BCD;&#xFF08;&#x5373;&#x4EE5;ISO 8859&#x4E3A;&#x4E3B;&#x7684;&#xFF09;&#x5219;&#x9700;&#x8981;&#x4E8C;&#x4E2A;&#x5B57;&#x8282;&#x7F16;&#x7801;&#xFF08;Unicode&#x8303;&#x56F4;&#x7531;U+0080&#x81F3;U+07FF&#xFF09;&#x3002;&#x5176;&#x4ED6;&#x57FA;&#x672C;&#x591A;&#x6587;&#x79CD;&#x5E73;&#x9762;&#xFF08;BMP&#xFF09;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#xFF08;&#x8FD9;&#x5305;&#x542B;&#x4E86;&#x5927;&#x90E8;&#x5206;&#x5E38;&#x7528;&#x5B57;&#xFF0C;&#x5305;&#x62EC;&#x6C49;&#x5B57;&#xFF09;&#x4F7F;&#x7528;&#x4E09;&#x4E2A;&#x5B57;&#x8282;&#x7F16;&#x7801;&#x3002;&#x5176;&#x4ED6;&#x6781;&#x5C11;&#x4F7F;&#x7528;&#x7684;Unicode &#x8F85;&#x52A9;&#x5E73;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x4F7F;&#x7528;&#x56DB;&#x5B57;&#x8282;&#x7F16;&#x7801;&#x3002;&#x5B83;&#x552F;&#x4E00;&#x7684;&#x597D;&#x5904;&#x5728;&#x4E8E;&#x517C;&#x5BB9;ASCII&#x3002;
UTF-16&#x5219;&#x662F;&#x4EE5;U+10000&#x4E3A;&#x5206;&#x754C;&#x7EBF;&#xFF0C;&#x4F7F;&#x7528;&#x4E24;&#x4E2A;&#x5B57;&#x8282;&#x6216;&#x8005;&#x56DB;&#x4E2A;&#x5B57;&#x8282;&#x5B58;&#x50A8;&#x3002;
UTF-32&#x5219;&#x662F;&#x5168;&#x90E8;&#x4F7F;&#x7528;4&#x5B57;&#x8282;&#x7F16;&#x7801;&#xFF0C;&#x5F88;&#x6D6A;&#x8D39;&#x7A7A;&#x95F4;&#x3002;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.4 GB2312&#x3001;GBK&#x3001;GB18030&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;GB&#x662F;&#x4E2D;&#x56FD;&#x8352;&#x8C2C;&#x7684;&#x56FD;&#x5BB6;&#x6807;&#x51C6;&#x3002;GB2312&#x3001;GBK&#x3001;GB18030&#x5404;&#x4E3A;&#x524D;&#x4E00;&#x4E2A;&#x7684;&#x6269;&#x5C55;&#x3002;&lt;/p&gt;

&lt;p&gt;&#x6211;&#x4ECE;&#x6765;&#x8BA8;&#x538C;GB&#x7F16;&#x7801;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x6BEB;&#x65E0;&#x56FD;&#x9645;&#x517C;&#x5BB9;&#x6027;&#x3002;&#x66F4;&#x8352;&#x8C2C;&#x7684;&#x662F;&#xFF0C;GBK&#x548C;GB18030&#x51E0;&#x4E4E;&#x662F;&#x7167;&#x7740;Unicode&#x5B57;&#x7B26;&#x96C6;&#x9009;&#x53D6;&#x7684;&#x5B57;&#x5E93;&#x3002;&#x8FD9;&#x6837;&#x591A;&#x6B64;&#x4E00;&#x4E3E;&#x5730;&#x5F04;&#x51FA;&#x4E00;&#x5957;&#x7F16;&#x7801;&#xFF0C;&#x8FD8;&#x5F3A;&#x5236;&#x6240;&#x6709;&#x5728;&#x4E2D;&#x56FD;&#x9500;&#x552E;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x5B83;&#xFF0C;&#x771F;&#x662F;&#x5929;&#x671D;&#x7279;&#x8272;&#x3002;&lt;/p&gt;

&lt;p&gt;&#x53E6;&#x5916;&#xFF0C;&#x5BF9;&#x4E8E;GB&#x7F16;&#x7801;PHP&#x662F;&#x4E0D;&#x8BA4;&#x8D26;&#x7684;&#xFF0C;mb&lt;em&gt;detect&lt;/em&gt;encoding&#x51FD;&#x6570;&#x4F1A;&#x628A;GB&#x7F16;&#x7801;&#x8BC6;&#x522B;&#x6210;CP936&#x3002;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.5 MSCS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&#x7136;&#x800C;&#x8BA1;&#x7B97;&#x673A;&#x4E16;&#x754C;&#x91CC;&#x5F88;&#x5FEB;&#x5C31;&#x6709;&#x4E86;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#xFF0C;&#x5355;&#x5B57;&#x8282;&#x7684;ASCII&#x5DF2;&#x65E0;&#x6CD5;&#x6EE1;&#x8DB3;&#x9700;&#x6C42;&#x3002;&#x540E;&#x6765;&#x6BCF;&#x4E2A;&#x8BED;&#x8A00;&#x5C31;&#x5236;&#x5B9A;&#x4E86;&#x4E00;&#x5957;&#x81EA;&#x5DF1;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x7531;&#x4E8E;&#x5355;&#x5B57;&#x8282;&#x80FD;&#x8868;&#x793A;&#x7684;&#x5B57;&#x7B26;&#x592A;&#x5C11;&#xFF0C;&#x800C;&#x4E14;&#x540C;&#x65F6;&#x4E5F;&#x9700;&#x8981;&#x4E0E;ASCII&#x7F16;&#x7801;&#x4FDD;&#x6301;&#x517C;&#x5BB9;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E9B;&#x7F16;&#x7801;&#x7EB7;&#x7EB7;&#x4F7F;&#x7528;&#x4E86;&#x591A;&#x5B57;&#x8282;&#x6765;&#x8868;&#x793A;&#x5B57;&#x7B26;&#xFF0C;&#x5982;GBxxx&#x3001;BIGxxx&#x7B49;&#x7B49;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x89C4;&#x5219;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x662F;\x80&#x4EE5;&#x4E0B;&#xFF0C;&#x5219;&#x4ECD;&#x7136;&#x8868;&#x793A;ASCII&#x5B57;&#x7B26;&#xFF1B;&#x800C;&#x5982;&#x679C;&#x662F;\x80&#x4EE5;&#x4E0A;&#xFF0C;&#x5219;&#x8DDF;&#x4E0B;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x4E00;&#x8D77;&#xFF08;&#x5171;&#x4E24;&#x4E2A;&#x5B57;&#x8282;&#xFF09;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x7136;&#x540E;&#x8DF3;&#x8FC7;&#x4E0B;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x5224;&#x65AD;&#x3002;&lt;/p&gt;

&lt;p&gt;&#x8FD9;&#x91CC;&#xFF0C;IBM&#x53D1;&#x660E;&#x4E86;&#x4E00;&#x4E2A;&#x53EB;Code Page&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5C06;&#x8FD9;&#x4E9B;&#x7F16;&#x7801;&#x90FD;&#x6536;&#x5165;&#x56CA;&#x4E2D;&#x5E76;&#x5206;&#x914D;&#x9875;&#x7801;&#xFF0C;GBK&#x662F;&#x7B2C;936&#x9875;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;CP936&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;CP936&#x8868;&#x793A;GBK&#x3002;&lt;/p&gt;

&lt;p&gt;MBCS(Multi-Byte Character Set)&#x662F;&#x8FD9;&#x4E9B;&#x7F16;&#x7801;&#x7684;&#x7EDF;&#x79F0;&#x3002;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#x5927;&#x5BB6;&#x90FD;&#x662F;&#x7528;&#x4E86;&#x53CC;&#x5B57;&#x8282;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#x65F6;&#x5019;&#x4E5F;&#x53EB;&#x505A;DBCS(Double-Byte Character Set)&#x3002;&#x5FC5;&#x987B;&#x660E;&#x786E;&#x7684;&#x662F;&#xFF0C;MBCS&#x5E76;&#x4E0D;&#x662F;&#x67D0;&#x4E00;&#x79CD;&#x7279;&#x5B9A;&#x7684;&#x7F16;&#x7801;&#xFF0C;Windows&#x91CC;&#x6839;&#x636E;&#x4F60;&#x8BBE;&#x5B9A;&#x7684;&#x533A;&#x57DF;&#x4E0D;&#x540C;&#xFF0C;MBCS&#x6307;&#x4EE3;&#x4E0D;&#x540C;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x800C;Linux&#x91CC;&#x65E0;&#x6CD5;&#x4F7F;&#x7528;MBCS&#x4F5C;&#x4E3A;&#x7F16;&#x7801;&#x3002;&#x5728;Windows&#x4E2D;&#x4F60;&#x770B;&#x4E0D;&#x5230;MBCS&#x8FD9;&#x51E0;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x56E0;&#x4E3A;&#x5FAE;&#x8F6F;&#x4E3A;&#x4E86;&#x66F4;&#x52A0;&#x6D0B;&#x6C14;&#xFF0C;&#x4F7F;&#x7528;&#x4E86;ANSI&#x6765;&#x5413;&#x552C;&#x4EBA;&#xFF0C;&#x8BB0;&#x4E8B;&#x672C;&#x7684;&#x53E6;&#x5B58;&#x4E3A;&#x5BF9;&#x8BDD;&#x6846;&#x91CC;&#x7F16;&#x7801;ANSI&#x5C31;&#x662F;MBCS&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x5728;&#x7B80;&#x4F53;&#x4E2D;&#x6587;Windows&#x9ED8;&#x8BA4;&#x7684;&#x533A;&#x57DF;&#x8BBE;&#x5B9A;&#x91CC;&#xFF0C;&#x6307;&#x4EE3;GBK&#x3002;&lt;/p&gt;

&lt;h3 id="toc_1"&gt;2 open&#x51FD;&#x6570;&lt;/h3&gt;

&lt;p&gt;open&#x72B6;&#x6001;rb&#x5BF9;&#x5E94;&#x7684;&#x662F;&lt;em&gt;io.BufferedReader,r&#x5BF9;&#x5E94;&#x7684;&#x662F;&lt;/em&gt;io.TextIOWrapper&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class io.TextIOWrapper(buffer, encoding=None, errors=None, newline=None, 
line_buffering=False)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A buffered text stream over a BufferedIOBase binary stream. It inherits TextIOBase.
encoding gives the name of the encoding that the stream will be decoded or encoded with. It defaults to locale.getpreferredencoding().&lt;/p&gt;

&lt;h3 id="toc_2"&gt;3 encode&#x548C;decode&#x65B9;&#x6CD5;&lt;/h3&gt;

&lt;p&gt;&#x5B57;&#x7B26;&#x4E32;&#x5728;Python&#x5185;&#x90E8;&#x7684;&#x8868;&#x793A;&#x662F;unicode&#x7F16;&#x7801;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x505A;&#x7F16;&#x7801;&#x8F6C;&#x6362;&#x65F6;&#xFF0C;&#x901A;&#x5E38;&#x9700;&#x8981;&#x4EE5;unicode&#x4F5C;&#x4E3A;&#x4E2D;&#x95F4;&#x7F16;&#x7801;&#xFF0C;&#x5373;&#x5148;&#x5C06;&#x5176;&#x4ED6;&#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x89E3;&#x7801;&#xFF08;decode&#xFF09;&#x6210;unicode&#xFF0C;&#x518D;&#x4ECE;unicode&#x7F16;&#x7801;&#xFF08;encode&#xFF09;&#x6210;&#x53E6;&#x4E00;&#x79CD;&#x7F16;&#x7801;decode&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5C06;&#x5176;&#x4ED6;&#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x6362;&#x6210;unicode&#x7F16;&#x7801;&#xFF0C;&#x5982;str1.decode(&amp;#39;gb2312&amp;#39;)&#xFF0C;&#x8868;&#x793A;&#x5C06;gb2312&#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#x4E32;str1&#x8F6C;&#x6362;&#x6210;unicode&#x7F16;&#x7801;&#x3002; encode&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5C06;unicode&#x7F16;&#x7801;&#x8F6C;&#x6362;&#x6210;&#x5176;&#x4ED6;&#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;str2.encode(&amp;#39;gb2312&amp;#39;)&#xFF0C;&#x8868;&#x793A;&#x5C06;unicode&#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#x4E32;str2&#x8F6C;&#x6362;&#x6210;gb2312&#x7F16;&#x7801;&#x3002; &lt;/p&gt;

&lt;p&gt;&#x56E0;&#x6B64;&#xFF0C;&#x8F6C;&#x7801;&#x7684;&#x65F6;&#x5019;&#x4E00;&#x5B9A;&#x8981;&#x5148;&#x641E;&#x660E;&#x767D;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;str&#x662F;&#x4EC0;&#x4E48;&#x7F16;&#x7801;&#xFF0C;&#x7136;&#x540E;decode&#x6210;unicode&#xFF0C;&#x7136;&#x540E;&#x518D;encode&#x6210;&#x5176;&#x4ED6;&#x7F16;&#x7801;&#x3002;&#x4EE3;&#x7801;&#x4E2D;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x9ED8;&#x8BA4;&#x7F16;&#x7801;&#x4E0E;&#x4EE3;&#x7801;&#x6587;&#x4EF6;&#x672C;&#x8EAB;&#x7684;&#x7F16;&#x7801;&#x4E00;&#x81F4;&#x3002; &lt;/p&gt;

&lt;p&gt;&#x5982;&#xFF1A;s=&amp;#39;&#x4E2D;&#x6587;&amp;#39;
&#x5982;&#x679C;&#x662F;&#x5728;utf8&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x8BE5;&#x5B57;&#x7B26;&#x4E32;&#x5C31;&#x662F;utf8&#x7F16;&#x7801;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x5728;gb2312&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x5219;&#x5176;&#x7F16;&#x7801;&#x4E3A;gb2312&#x3002;&#x8FD9;
&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8981;&#x8FDB;&#x884C;&#x7F16;&#x7801;&#x8F6C;&#x6362;&#xFF0C;&#x90FD;&#x9700;&#x8981;&#x5148;&#x7528;decode&#x65B9;&#x6CD5;&#x5C06;&#x5176;&#x8F6C;&#x6362;&#x6210;unicode&#x7F16;&#x7801;&#xFF0C;&#x518D;&#x4F7F;&#x7528;encode&#x65B9;&#x6CD5;&#x5C06;
&#x5176;&#x8F6C;&#x6362;&#x6210;&#x5176;&#x4ED6;&#x7F16;&#x7801;&#x3002;&#x901A;&#x5E38;&#xFF0C;&#x5728;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x7279;&#x5B9A;&#x7684;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#x65F6;&#xFF0C;&#x90FD;&#x662F;&#x4F7F;&#x7528;&#x7684;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x7F16;&#x7801;&#x521B;&#x5EFA;&#x7684;&#x4EE3;&#x7801;&#x6587;&#x4EF6;&lt;/p&gt;

&lt;h3 id="toc_3"&gt;4 &#x76F8;&#x5173;&#x4EE3;&#x7801;&lt;/h3&gt;

&lt;p&gt;python&#x9ED8;&#x8BA4;&#x7F16;&#x7801;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    default encodings in Python are:
    Python 2.x: ASCII
    Python 3.x: UTF-8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;win7&#x4E2D;&#x6587;&#x73AF;&#x5883;&#x4E2D;&#x5BF9;&#x5E94;&#x7684;&#x7CFB;&#x7EDF;&#x53C2;&#x6570;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    print(&amp;#39;&amp;lt;strong&amp;gt;python&#x7CFB;&#x7EDF;&#x53C2;&#x6570;&#xFF1A;&amp;#39;)
    print(locale.getdefaultlocale()) #(&amp;#39;zh_CN&amp;#39;, &amp;#39;cp936&amp;#39;)
    print(locale.getpreferredencoding()) # cp936
    print(sys.getdefaultencoding()) #utf-8
    print(sys.getfilesystemencoding())#mbcs
    print(sys.maxunicode)
    print(codecs.lookup(&amp;#39;utf-8&amp;#39;))#codeinfo class

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;    (&amp;#39;zh_CN&amp;#39;, &amp;#39;cp936&amp;#39;)
    cp936
    utf-8
    mbcs
    1114111
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;utf-8, gbk codecs error&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ch_str = &amp;#39;&#x4E2D;&#x6587;&amp;#39;
    try:
        codecs_decode(codecs_encode(ch_str,&amp;#39;gbk&amp;#39;))
    except Exception:
        print(&amp;#39;&amp;lt;strong&amp;gt;utf-8 codec decode error&amp;#39;)

    codecs_decode(codecs_encode(&amp;#39;1&#xE8;re Recu&#xE9;rdame &#xC3;&#xA9;couteur &#xC3;&#xA7;a&amp;#39;))
    codecs_decode(codecs_encode(&amp;#39;1&#xE8;re Recu&#xE9;rdame &#xC3;&#xA9;couteur &#xC3;&#xA7;a&amp;#39;),&amp;#39;gbk&amp;#39;)
    try:
        codecs_decode(codecs_encode(&amp;#39;1&#xE8;re&amp;#39;,&amp;#39;gbk&amp;#39;))
    except Exception:
        print(&amp;#39;&amp;lt;strong&amp;gt;utf-8 codec decode error&amp;#39;)

    code_str = &amp;#39;&#x4E2D;&#x56FD;&amp;#39;
    print(code_str.encode().decode())
    print(code_str.encode().decode(&amp;#39;mbcs&amp;#39;,&amp;#39;ignore&amp;#39;))
    try:
        print(code_str.encode().decode(&amp;#39;gbk&amp;#39;,&amp;#39;strict&amp;#39;))
    except Exception:
        print(&amp;#39;&amp;lt;strong&amp;gt;gbk codec decode error&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;binary&#x5199;&#x6587;&#x4EF6;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
#write french in file
def write_file(filename):
    with open(filename,&amp;#39;wb&amp;#39;) as file:
        file.write(&amp;#39;ry dialect: /a/, /&#x251;/, /e/, /&#x25B;/, /&#x259;/, /i/, /o/, /&#x254;/, /&amp;#39;.encode())

def write_file_append(filename,string):
    line_list = []
    with open(filename,&amp;#39;rb&amp;#39;) as file:
        for line in file:
            line_list.append(line)

    with open(filename,&amp;#39;wb&amp;#39;) as file:
        for i in range(len(line_list)):
            file.write(line_list[i])

        file.write(string.encode())
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="toc_4"&gt;5 &#x53C2;&#x8003;&#x8D44;&#x6599;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;python unicode howto:(unicode codepoints): &lt;a href="http://docs.python.org/3/howto/unicode.html"&gt;http://docs.python.org/3/howto/unicode.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;python unicode&amp;amp;encoding: &lt;a href="http://docs.python.org/3.3/library/codecs.html#encodings-and-unicode"&gt;http://docs.python.org/3.3/library/codecs.html#encodings-and-unicode&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unicode further reading : &lt;a href="http://www.diveinto.org/python3/strings.html#py-encoding"&gt;http://www.diveinto.org/python3/strings.html#py-encoding&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;new in the python3.0:
&lt;a href="http://docs.python.org/3.0/whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit"&gt;http://docs.python.org/3.0/whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;codecs test: &lt;a href="http://pymotw.com/2/codecs/"&gt;http://pymotw.com/2/codecs/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;py33 file (locale.getpreferredencoding()):
&lt;a href="http://www.diveinto.org/python3/files.html"&gt;http://www.diveinto.org/python3/files.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;py33 io (buffering):
&lt;a href="http://docs.python.org/3.1/library/io.html#io.TextIOWrapper"&gt;http://docs.python.org/3.1/library/io.html#io.TextIOWrapper&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;py33 shutil(high-level operations on files):
&lt;a href="http://docs.python.org/3.3/library/shutil.html"&gt;http://docs.python.org/3.3/library/shutil.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;codecs&#x6E90;&#x7801;:&#xFF08;C:\Python33\Lib\codecs.py&#xFF09;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PEP and ISSUES:&lt;/p&gt;

&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;ISSUES:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;distutils.commands.bdist&lt;em&gt;wininst.bdist&lt;/em&gt;wininst.get_inidata use mdcs encoding
&lt;a href="http://bugs.python.org/issue10945"&gt;http://bugs.python.org/issue10945&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;bytes.decode(&amp;#39;mbcs&amp;#39;, &amp;#39;ignore&amp;#39;) does replace undecodable bytes on Windows Vista or later
&lt;a href="http://bugs.python.org/issue12281"&gt;http://bugs.python.org/issue12281&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PEP393&#xFF1A;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flexible String Representation
&lt;a href="http://www.python.org/dev/peps/pep-0393/#discussion"&gt;http://www.python.org/dev/peps/pep-0393/#discussion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PEP0263: Defining Python Source Code Encodings
&lt;a href="http://www.python.org/dev/peps/pep-0263/"&gt;http://www.python.org/dev/peps/pep-0263/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;p.s.&lt;/p&gt;

&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;sublime3/2&#x7684;&#x9519;&#x8BEF;&#x7F16;&#x7801;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&#xFF08;&#x7531;&#x4E8E;sublime&#x81EA;&#x8EAB;&#x7684;&#x7F16;&#x7801;&#x539F;&#x56E0;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x80FD;&#x9020;&#x6210;&#x5728;ctrl+b&#x7F16;&#x8BD1;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5BF9;&#x591A;&#x8BED;&#x8A00;&#x7684;&#x7F16;&#x7801;&#x51FA;&#x73B0;&#x9519;&#x8BEF;&#xFF09;&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>
